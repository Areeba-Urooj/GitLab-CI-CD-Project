stages:
  - build
  - test
  - deploy
  - deploy production
  - test production
  - deploy staging
  - test staging

variables:
  APP_BASE_URL: http://areeba-gitlab-ci.s3-website.ap-south-1.amazonaws.com
  APP_BASE_URL_STAGING: http://areeba-gitlab-ci-staging.s3-website.ap-south-1.amazonaws.com

build:
  stage: build
  image: node:20-alpine
  script:
    - npm install
    - NODE_OPTIONS=--openssl-legacy-provider npm run build
  artifacts:
    paths:
      - build/

deploy:
  stage: deploy
  image: node:20-alpine
  script:
    - mkdir -p public
    - cp -r build/* public/ || echo "Failed to copy build files"
    - ls -la public/
  artifacts:
    paths:
      - public
  only:
    - main
  dependencies:
    - build

test:
  image: node:20-alpine
  stage: test
  dependencies:
    - build
  script:
    - apk add curl
    - npm install -g serve
    - serve -s build &
    - sleep 10
    - curl http://localhost:3000 | grep "React App"

unit tests:
  image: node:16-alpine
  stage: test
  script:
    - npm install
    - npm test

deploy to staging:
  image:
    name: amazon/aws-cli:2.22.4
    entrypoint: [""]
  rules:
    - if: $CI_COMMIT_REF_NAME == $CI_DEFAULT_BRANCH
  stage: deploy staging
  script:
    - aws --version
    - aws s3 sync build $AWS_S3_BUCKET_STAGING --delete

staging tests:
  stage: test staging
  image: curlimages/curl
  rules:
    - if: $CI_COMMIT_REF_NAME == $CI_DEFAULT_BRANCH
  script:
    - curl $APP_BASE_URL_STAGING | grep "React App"

deploy to production:
  image:
    name: amazon/aws-cli:2.22.4
    entrypoint: [""]
  rules:
    - if: $CI_COMMIT_REF_NAME == $CI_DEFAULT_BRANCH
  stage: deploy production
  script:
    - aws --version
    - aws s3 sync build $AWS_S3_BUCKET --delete

production tests:
  stage: test production
  image: curlimages/curl
  rules:
    - if: $CI_COMMIT_REF_NAME == $CI_DEFAULT_BRANCH
  script:
    - curl $APP_BASE_URL | grep "React App"


